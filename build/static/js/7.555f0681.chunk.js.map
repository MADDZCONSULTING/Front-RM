{"version":3,"sources":["assets/img/products/product_640-1.jpg","assets/img/products/product_640-2.jpg","assets/img/products/product_640-3.jpg","assets/img/products/product_640-4.jpg","assets/img/products/product_640-5.jpg","assets/img/products/product_640-6.jpg","assets/img/users/100_6.jpg","assets/img/users/100_7.jpg","assets/img/users/100_8.jpg","assets/img/users/100_9.jpg","assets/img/users/100_10.jpg","assets/img/users/100_11.jpg","assets/img/users/100_12.jpg","assets/img/users/100_13.jpg","assets/img/users/100_14.jpg","demos/dashboardPage.js","../node_modules/reactstrap/es/CardGroup.js","../node_modules/reactstrap/es/CardDeck.js","pages/DashboardPage.js"],"names":["module","exports","__webpack_require__","p","productsData","id","image","product1Image","title","description","right","product2Image","product3Image","product4Image","product5Image","product6Image","avatarsData","avatar","user1Image","name","date","user2Image","user3Image","user4Image","user5Image","user6Image","user7Image","user8Image","user9Image","user10Image","user11Image","user12Image","user13Image","user14Image","userProgressTableData","progress","supportTicketsData","text","status","todosData","done","chartjs","bar","data","labels","datasets","label","backgroundColor","stack","options","display","tooltips","mode","intersect","responsive","legend","scales","xAxes","stacked","yAxes","doughnut","animation","animateScale","animateRotate","line","borderColor","hover","scaleLabel","labelString","gridLines","propTypes","tag","utils","className","prop_types_default","a","string","cssModule","object","CardGroup_CardGroup","props","Tag","attributes","Object","objectWithoutPropertiesLoose","classes","classnames_default","react_default","createElement","esm_extends","defaultProps","es_CardGroup","CardDeck_propTypes","CardDeck_CardDeck","es_CardDeck","today","Date","lastWeek","getFullYear","getMonth","getDate","DashboardPage","window","scrollTo","primaryColor","getColor","secondaryColor","Page","Row","Col","lg","md","sm","xs","Widget","subtitle","number","color","value","es_Card","CardHeader","CardBody","es","ListGroup","flush","ListGroupItem","index_esm","size","Badge","style","marginBottom","bgColor","inverse","icon","MdThumbUp","MdRateReview","MdShare","map","_ref","ProductMedia","key","UserProgressTable","headers","usersData","getStackLineChart","stackLineChartOptions","position","CardTitle","reverse","react_infinite_calendar_es","selected","minDate","width","theme","accentColor","floatingNav","background","chevron","headerColor","selectionColor","textColor","active","default","todayColor","weekdayColor","MapWithBubbles","body","overflowX","paddingBottom","height","paddingTop","HorizontalAvatarList","avatars","avatarProps","reversed","Card","header","avatarSize","buttonProps","children","Button","supportTicket","SupportTicket","assign","todos","React","Component"],"mappings":"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","file":"static/js/7.555f0681.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/product_640-1.a9a0ec64.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product_640-2.da0b0457.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product_640-3.64ed27c9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product_640-4.2110d8cd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product_640-5.bf8840bd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product_640-6.f9249755.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_6.de882536.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_7.1dce100f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_8.a4be0bbf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_9.798c02eb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_10.56d054ff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_11.336faadc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_12.1e0889af.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_13.63265e92.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_14.595b8cbd.jpg\";","import product1Image from 'assets/img/products/product_640-1.jpg';\r\nimport product2Image from 'assets/img/products/product_640-2.jpg';\r\nimport product3Image from 'assets/img/products/product_640-3.jpg';\r\nimport product4Image from 'assets/img/products/product_640-4.jpg';\r\nimport product5Image from 'assets/img/products/product_640-5.jpg';\r\nimport product6Image from 'assets/img/products/product_640-6.jpg';\r\n\r\nimport user1Image from 'assets/img/users/100_1.jpg';\r\nimport user2Image from 'assets/img/users/100_2.jpg';\r\nimport user3Image from 'assets/img/users/100_3.jpg';\r\nimport user4Image from 'assets/img/users/100_4.jpg';\r\nimport user5Image from 'assets/img/users/100_5.jpg';\r\nimport user6Image from 'assets/img/users/100_6.jpg';\r\nimport user7Image from 'assets/img/users/100_7.jpg';\r\nimport user8Image from 'assets/img/users/100_8.jpg';\r\nimport user9Image from 'assets/img/users/100_9.jpg';\r\nimport user10Image from 'assets/img/users/100_10.jpg';\r\nimport user11Image from 'assets/img/users/100_11.jpg';\r\nimport user12Image from 'assets/img/users/100_12.jpg';\r\nimport user13Image from 'assets/img/users/100_13.jpg';\r\nimport user14Image from 'assets/img/users/100_14.jpg';\r\n\r\nexport const productsData = [\r\n  {\r\n    id: 1,\r\n    image: product1Image,\r\n    title: 'Admin Template',\r\n    description: 'Responsive admin template...',\r\n    right: '$36',\r\n  },\r\n  {\r\n    id: 2,\r\n    image: product2Image,\r\n    title: 'Schedule App',\r\n    description: 'Manage your schedule...',\r\n    right: '$9',\r\n  },\r\n  {\r\n    id: 3,\r\n    image: product3Image,\r\n    title: 'Chat App',\r\n    description: 'Realtime chat application...',\r\n    right: '$12',\r\n  },\r\n  {\r\n    id: 4,\r\n    image: product4Image,\r\n    title: 'Wordpress Business Theme',\r\n    description: 'Over 100+ templates and pages...',\r\n    right: '$24',\r\n  },\r\n  {\r\n    id: 5,\r\n    image: product5Image,\r\n    title: 'Camera App',\r\n    description: 'Over 30+ filter...',\r\n    right: '$6.99',\r\n  },\r\n  {\r\n    id: 6,\r\n    image: product6Image,\r\n    title: 'Calendar App',\r\n    description: 'Organize your schedule...',\r\n    right: '$0.99',\r\n  },\r\n];\r\n\r\nexport const avatarsData = [\r\n  {\r\n    avatar: user1Image,\r\n    name: 'Tom',\r\n    date: '3 month ago',\r\n  },\r\n  {\r\n    avatar: user2Image,\r\n    name: 'Jenny',\r\n    date: '1 year ago',\r\n  },\r\n  {\r\n    avatar: user3Image,\r\n    name: 'Sim',\r\n    date: '2 hour ago',\r\n  },\r\n  {\r\n    avatar: user4Image,\r\n    name: 'Christine',\r\n    date: 'a month ago',\r\n  },\r\n  {\r\n    avatar: user5Image,\r\n    name: 'Bread',\r\n    date: '6 months ago',\r\n  },\r\n  {\r\n    avatar: user6Image,\r\n    name: 'Dan',\r\n    date: '2 years ago',\r\n  },\r\n  {\r\n    avatar: user7Image,\r\n    name: 'Merry',\r\n    date: '3 month ago',\r\n  },\r\n  {\r\n    avatar: user8Image,\r\n    name: 'John',\r\n    date: '1 month ago',\r\n  },\r\n  {\r\n    avatar: user9Image,\r\n    name: 'Shane',\r\n    date: '7 month ago',\r\n  },\r\n  {\r\n    avatar: user10Image,\r\n    name: 'Star',\r\n    date: '1 year ago',\r\n  },\r\n  {\r\n    avatar: user11Image,\r\n    name: 'Jenny',\r\n    date: '3 month ago',\r\n  },\r\n  {\r\n    avatar: user12Image,\r\n    name: 'Park',\r\n    date: '4 month ago',\r\n  },\r\n  {\r\n    avatar: user13Image,\r\n    name: 'Dave',\r\n    date: '9 month ago',\r\n  },\r\n  {\r\n    avatar: user14Image,\r\n    name: 'Jackson',\r\n    date: '10 month ago',\r\n  },\r\n];\r\n\r\nexport const userProgressTableData = [\r\n  {\r\n    avatar: user1Image,\r\n    name: 'Tom',\r\n    date: '3 month ago',\r\n    progress: 75,\r\n  },\r\n  {\r\n    avatar: user2Image,\r\n    name: 'Jenny',\r\n    date: '1 year ago',\r\n    progress: 60,\r\n  },\r\n  {\r\n    avatar: user3Image,\r\n    name: 'Sim',\r\n    date: '2 hour ago',\r\n    progress: 50,\r\n  },\r\n  {\r\n    avatar: user4Image,\r\n    name: 'Christine',\r\n    date: 'a month ago',\r\n    progress: 40,\r\n  },\r\n  {\r\n    avatar: user5Image,\r\n    name: 'Bread',\r\n    date: '6 months ago',\r\n    progress: 30,\r\n  },\r\n  {\r\n    avatar: user6Image,\r\n    name: 'Dan',\r\n    date: '2 years ago',\r\n    progress: 25,\r\n  },\r\n];\r\n\r\nexport const supportTicketsData = [\r\n  {\r\n    id: 1,\r\n    avatar: user1Image,\r\n    name: 'Sim',\r\n    date: '30 mins ago',\r\n    text:\r\n      'Lorem ipsum dolor sit amet,consectetuer edipiscing elit,sed diam nonummy nibh euismod tinciduntut laoreet doloremagna aliquam erat volutpat.',\r\n    status: 'pending',\r\n  },\r\n  {\r\n    id: 2,\r\n    avatar: user2Image,\r\n    name: 'Jane',\r\n    date: '1 hour ago',\r\n    text:\r\n      'Lorem ipsum dolor sit amet,consectetuer edipiscing elit,sed diam nonummy nibh euismod tinciduntut laoreet doloremagna aliquam erat volutpat.',\r\n    status: 'open',\r\n  },\r\n  {\r\n    id: 3,\r\n    avatar: user3Image,\r\n    name: 'Tom',\r\n    date: 'yesterday',\r\n    text:\r\n      'Lorem ipsum dolor sit amet,consectetuer edipiscing elit,sed diam nonummy nibh euismod tinciduntut laoreet doloremagna aliquam erat volutpat.',\r\n    status: 'closed',\r\n  },\r\n];\r\n\r\nexport const todosData = [\r\n  { id: 1, title: 'task -1', done: true },\r\n  { id: 2, title: 'task -2', done: false },\r\n  { id: 3, title: 'task -3', done: true },\r\n  { id: 4, title: 'task -4', done: true },\r\n  { id: 5, title: 'task -5', done: false },\r\n];\r\n\r\nexport const chartjs = {\r\n  bar: {\r\n    data: {\r\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n      datasets: [\r\n        {\r\n          label: 'Expense for this year',\r\n          backgroundColor: '#6a82fb',\r\n          stack: 'Expense',\r\n          data: [10000, 30000, 50000, 80000, 60000, 20000, 10000],\r\n        },\r\n        {\r\n          label: 'Expense for last year',\r\n          backgroundColor: '#fc5c7d',\r\n          stack: 'Expense',\r\n          data: [30000, 80000, 50000, 100000, 60000, 40000, 90000],\r\n        },\r\n      ],\r\n    },\r\n    options: {\r\n      title: {\r\n        display: false,\r\n        text: 'Chart.js Bar Chart - Stacked',\r\n      },\r\n      tooltips: {\r\n        mode: 'index',\r\n        intersect: false,\r\n      },\r\n      responsive: true,\r\n      legend: {\r\n        display: false,\r\n      },\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            stacked: true,\r\n            display: false,\r\n          },\r\n        ],\r\n        yAxes: [\r\n          {\r\n            stacked: true,\r\n            display: false,\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  },\r\n  doughnut: {\r\n    data: {\r\n      datasets: [\r\n        {\r\n          data: [20, 30, 40, 50, 60],\r\n          backgroundColor: [\r\n            '#6a82fb',\r\n            '#fc5c7d',\r\n            '#45b649',\r\n            '#00c9ff',\r\n            '#ffd700',\r\n          ],\r\n          label: 'Dataset 1',\r\n        },\r\n      ],\r\n      labels: ['Red', 'Orange', 'Yellow', 'Green', 'Blue'],\r\n    },\r\n    options: {\r\n      responsive: true,\r\n      legend: {\r\n        display: false,\r\n      },\r\n      title: {\r\n        display: false,\r\n        text: 'Chart.js Doughnut Chart',\r\n      },\r\n      animation: {\r\n        animateScale: true,\r\n        animateRotate: true,\r\n      },\r\n    },\r\n  },\r\n  line: {\r\n    data: {\r\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n      datasets: [\r\n        {\r\n          label: 'Revenue for this year',\r\n          borderColor: '#6a82fb',\r\n          backgroundColor: '#6a82fb',\r\n          data: [0, 1300, 2200, 3400, 4600, 3500, 3000],\r\n        },\r\n\r\n        {\r\n          label: 'Revenue for last year',\r\n          borderColor: '#fc5c7d',\r\n          backgroundColor: '#fc5c7d',\r\n          data: [0, 1300, 2200, 3400, 4600, 3500, 3000],\r\n        },\r\n      ],\r\n    },\r\n    options: {\r\n      responsive: true,\r\n      legend: {\r\n        display: false,\r\n      },\r\n      title: {\r\n        display: false,\r\n        text: 'Chart.js Line Chart - Stacked Area',\r\n      },\r\n      tooltips: {\r\n        intersect: false,\r\n        mode: 'nearest',\r\n      },\r\n      hover: {\r\n        mode: 'index',\r\n      },\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            scaleLabel: {\r\n              display: false,\r\n              labelString: 'Month',\r\n            },\r\n            gridLines: {\r\n              display: false,\r\n            },\r\n          },\r\n        ],\r\n        yAxes: [\r\n          {\r\n            stacked: true,\r\n            scaleLabel: {\r\n              display: false,\r\n              labelString: 'Value',\r\n            },\r\n            gridLines: {\r\n              display: false,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  },\r\n};\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardGroup = function CardGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-group'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardGroup.propTypes = propTypes;\nCardGroup.defaultProps = defaultProps;\nexport default CardGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardDeck = function CardDeck(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-deck'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardDeck.propTypes = propTypes;\nCardDeck.defaultProps = defaultProps;\nexport default CardDeck;","import { AnnouncementCard, TodosCard } from 'components/Card';\r\nimport HorizontalAvatarList from 'components/HorizontalAvatarList';\r\nimport MapWithBubbles from 'components/MapWithBubbles';\r\nimport Page from 'components/Page';\r\nimport ProductMedia from 'components/ProductMedia';\r\nimport SupportTicket from 'components/SupportTicket';\r\nimport UserProgressTable from 'components/UserProgressTable';\r\nimport { IconWidget, NumberWidget } from 'components/Widget';\r\nimport { getStackLineChart, stackLineChartOptions } from 'demos/chartjs';\r\nimport {\r\n  avatarsData,\r\n  chartjs,\r\n  productsData,\r\n  supportTicketsData,\r\n  todosData,\r\n  userProgressTableData,\r\n} from 'demos/dashboardPage';\r\nimport React from 'react';\r\nimport { Bar, Line } from 'react-chartjs-2';\r\nimport {\r\n  MdBubbleChart,\r\n  MdInsertChart,\r\n  MdPersonPin,\r\n  MdPieChart,\r\n  MdRateReview,\r\n  MdShare,\r\n  MdShowChart,\r\n  MdThumbUp,\r\n} from 'react-icons/md';\r\nimport InfiniteCalendar from 'react-infinite-calendar';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardDeck,\r\n  CardGroup,\r\n  CardHeader,\r\n  CardTitle,\r\n  Col,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Row,\r\n} from 'reactstrap';\r\nimport { getColor } from 'utils/colors';\r\n\r\nconst today = new Date();\r\nconst lastWeek = new Date(\r\n  today.getFullYear(),\r\n  today.getMonth(),\r\n  today.getDate() - 7,\r\n);\r\n\r\nclass DashboardPage extends React.Component {\r\n  componentDidMount() {\r\n    // this is needed, because InfiniteCalendar forces window scroll\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  render() {\r\n    const primaryColor = getColor('primary');\r\n    const secondaryColor = getColor('secondary');\r\n\r\n    return (\r\n      <Page\r\n        className=\"DashboardPage\"\r\n        title=\"Dashboard\"\r\n       \r\n      >\r\n        <Row>\r\n          <Col lg={3} md={6} sm={6} xs={12}>\r\n            <NumberWidget\r\n              title=\"Total Profit\"\r\n              subtitle=\"This month\"\r\n              number=\"9.8k\"\r\n              color=\"secondary\"\r\n              progress={{\r\n                value: 75,\r\n                label: 'Last month',\r\n              }}\r\n            />\r\n          </Col>\r\n\r\n          <Col lg={3} md={6} sm={6} xs={12}>\r\n            <NumberWidget\r\n              title=\"Monthly Visitors\"\r\n              subtitle=\"This month\"\r\n              number=\"5,400\"\r\n              color=\"secondary\"\r\n              progress={{\r\n                value: 45,\r\n                label: 'Last month',\r\n              }}\r\n            />\r\n          </Col>\r\n\r\n          <Col lg={3} md={6} sm={6} xs={12}>\r\n            <NumberWidget\r\n              title=\"New Users\"\r\n              subtitle=\"This month\"\r\n              number=\"3,400\"\r\n              color=\"secondary\"\r\n              progress={{\r\n                value: 90,\r\n                label: 'Last month',\r\n              }}\r\n            />\r\n          </Col>\r\n\r\n          <Col lg={3} md={6} sm={6} xs={12}>\r\n            <NumberWidget\r\n              title=\"Bounce Rate\"\r\n              subtitle=\"This month\"\r\n              number=\"38%\"\r\n              color=\"secondary\"\r\n              progress={{\r\n                value: 60,\r\n                label: 'Last month',\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col lg=\"8\" md=\"12\" sm=\"12\" xs=\"12\">\r\n            <Card>\r\n              <CardHeader>\r\n                Total Revenue{' '}\r\n                <small className=\"text-muted text-capitalize\">This year</small>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Line data={chartjs.line.data} options={chartjs.line.options} />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\r\n            <Card>\r\n              <CardHeader>Total Expense</CardHeader>\r\n              <CardBody>\r\n                <Bar data={chartjs.bar.data} options={chartjs.bar.options} />\r\n              </CardBody>\r\n              <ListGroup flush>\r\n                <ListGroupItem>\r\n                  <MdInsertChart size={25} color={primaryColor} /> Cost of sales{' '}\r\n                  <Badge color=\"secondary\">$3000</Badge>\r\n                </ListGroupItem>\r\n                <ListGroupItem>\r\n                  <MdBubbleChart size={25} color={primaryColor} /> Management\r\n                  costs <Badge color=\"secondary\">$1200</Badge>\r\n                </ListGroupItem>\r\n                <ListGroupItem>\r\n                  <MdShowChart size={25} color={primaryColor} /> Financial costs{' '}\r\n                  <Badge color=\"secondary\">$800</Badge>\r\n                </ListGroupItem>\r\n                <ListGroupItem>\r\n                  <MdPieChart size={25} color={primaryColor} /> Other operating\r\n                  costs <Badge color=\"secondary\">$2400</Badge>\r\n                </ListGroupItem>\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        <CardGroup style={{ marginBottom: '1rem' }}>\r\n          <IconWidget\r\n            bgColor=\"white\"\r\n            inverse={false}\r\n            icon={MdThumbUp}\r\n            title=\"50+ Likes\"\r\n            subtitle=\"People you like\"\r\n          />\r\n          <IconWidget\r\n            bgColor=\"white\"\r\n            inverse={false}\r\n            icon={MdRateReview}\r\n            title=\"10+ Reviews\"\r\n            subtitle=\"New Reviews\"\r\n          />\r\n          <IconWidget\r\n            bgColor=\"white\"\r\n            inverse={false}\r\n            icon={MdShare}\r\n            title=\"30+ Shares\"\r\n            subtitle=\"New Shares\"\r\n          />\r\n        </CardGroup>\r\n\r\n        <Row>\r\n          <Col md=\"6\" sm=\"12\" xs=\"12\">\r\n            <Card>\r\n              <CardHeader>New Products</CardHeader>\r\n              <CardBody>\r\n                {productsData.map(\r\n                  ({ id, image, title, description, right }) => (\r\n                    <ProductMedia\r\n                      key={id}\r\n                      image={image}\r\n                      title={title}\r\n                      description={description}\r\n                      right={right}\r\n                    />\r\n                  ),\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col md=\"6\" sm=\"12\" xs=\"12\">\r\n            <Card>\r\n              <CardHeader>New Users</CardHeader>\r\n              <CardBody>\r\n                <UserProgressTable\r\n                  headers={[\r\n                    <MdPersonPin size={25} />,\r\n                    'name',\r\n                    'date',\r\n                    'participation',\r\n                    '%',\r\n                  ]}\r\n                  usersData={userProgressTableData}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col lg={4} md={4} sm={12} xs={12}>\r\n            <Card>\r\n              <Line\r\n                data={getStackLineChart({\r\n                  labels: [\r\n                    'January',\r\n                    'February',\r\n                    'March',\r\n                    'April',\r\n                    'May',\r\n                    'June',\r\n                    'July',\r\n                  ],\r\n                  data: [0, 13000, 5000, 24000, 16000, 25000, 10000],\r\n                })}\r\n                options={stackLineChartOptions}\r\n              />\r\n              <CardBody\r\n                className=\"text-primary\"\r\n                style={{ position: 'absolute' }}\r\n              >\r\n                <CardTitle>\r\n                  <MdInsertChart /> Sales\r\n                </CardTitle>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col lg={4} md={4} sm={12} xs={12}>\r\n            <Card>\r\n              <Line\r\n                data={getStackLineChart({\r\n                  labels: [\r\n                    'January',\r\n                    'February',\r\n                    'March',\r\n                    'April',\r\n                    'May',\r\n                    'June',\r\n                    'July',\r\n                  ],\r\n                  data: [10000, 15000, 5000, 10000, 5000, 10000, 10000],\r\n                })}\r\n                options={stackLineChartOptions}\r\n              />\r\n              <CardBody\r\n                className=\"text-primary\"\r\n                style={{ position: 'absolute' }}\r\n              >\r\n                <CardTitle>\r\n                  <MdInsertChart /> Revenue\r\n                </CardTitle>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          <Col lg={4} md={4} sm={12} xs={12}>\r\n            <Card>\r\n              <Line\r\n                data={getStackLineChart({\r\n                  labels: [\r\n                    'January',\r\n                    'February',\r\n                    'March',\r\n                    'April',\r\n                    'May',\r\n                    'June',\r\n                    'July',\r\n                  ],\r\n                  data: [0, 13000, 5000, 24000, 16000, 25000, 10000].reverse(),\r\n                })}\r\n                options={stackLineChartOptions}\r\n              />\r\n              <CardBody\r\n                className=\"text-primary\"\r\n                style={{ position: 'absolute', right: 0 }}\r\n              >\r\n                <CardTitle>\r\n                  <MdInsertChart /> Profit\r\n                </CardTitle>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\r\n            <InfiniteCalendar\r\n              selected={today}\r\n              minDate={lastWeek}\r\n              width=\"100%\"\r\n              theme={{\r\n                accentColor: primaryColor,\r\n                floatingNav: {\r\n                  background: secondaryColor,\r\n                  chevron: primaryColor,\r\n                  color: '#FFF',\r\n                },\r\n                headerColor: primaryColor,\r\n                selectionColor: secondaryColor,\r\n                textColor: {\r\n                  active: '#FFF',\r\n                  default: '#333',\r\n                },\r\n                todayColor: secondaryColor,\r\n                weekdayColor: primaryColor,\r\n              }}\r\n            />\r\n          </Col>\r\n\r\n          <Col lg=\"8\" md=\"12\" sm=\"12\" xs=\"12\">\r\n            <Card inverse className=\"bg-gradient-primary\">\r\n              <CardHeader className=\"bg-gradient-primary\">\r\n                Map with bubbles\r\n              </CardHeader>\r\n              <CardBody>\r\n                <MapWithBubbles />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        <CardDeck style={{ marginBottom: '1rem' }}>\r\n          <Card body style={{ overflowX: 'auto','paddingBottom':'15px','height': 'fit-content','paddingTop': 'inherit'}}>\r\n            <HorizontalAvatarList\r\n              avatars={avatarsData}\r\n              avatarProps={{ size: 50 }}\r\n            />\r\n          </Card>\r\n\r\n          <Card body style={{ overflowX: 'auto','paddingBottom':'15px','height': 'fit-content','paddingTop': 'inherit'}}>\r\n            <HorizontalAvatarList\r\n              avatars={avatarsData}\r\n              avatarProps={{ size: 50 }}\r\n              reversed\r\n            />\r\n          </Card>\r\n        </CardDeck>\r\n\r\n        <Row>\r\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\r\n            <AnnouncementCard\r\n              color=\"gradient-secondary\"\r\n              header=\"Announcement\"\r\n              avatarSize={60}\r\n              name=\"Jamy\"\r\n              date=\"1 hour ago\"\r\n              text=\"Lorem ipsum dolor sit amet,consectetuer edipiscing elit,sed diam nonummy euismod tinciduntut laoreet doloremagna\"\r\n              buttonProps={{\r\n                children: 'show',\r\n              }}\r\n              style={{ height: 500 }}\r\n            />\r\n          </Col>\r\n\r\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div className=\"d-flex justify-content-between align-items-center\">\r\n                  <span>Support Tickets</span>\r\n                  <Button>\r\n                    <small>View All</small>\r\n                  </Button>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                {supportTicketsData.map(supportTicket => (\r\n                  <SupportTicket key={supportTicket.id} {...supportTicket} />\r\n                ))}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\r\n            <TodosCard todos={todosData} />\r\n          </Col>\r\n        </Row>\r\n      </Page>\r\n    );\r\n  }\r\n}\r\nexport default DashboardPage;\r\n"],"sourceRoot":""}