{"version":3,"sources":["components/Typography.js","components/Page.js","utils/colors.js","demos/chartjs.js","components/Widget/NumberWidget.js","components/Widget/DataWidget.js","components/Widget/IconWidget.js","components/Widget/index.js","components/HorizontalAvatarList.js","components/MapWithBubbles.js","components/ProductMedia.js","components/SupportTicket.js","components/UserProgressTable.js"],"names":["tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","_ref","TypoComp","Tag","tag","className","type","restProps","Object","C_Users_dell_Desktop_Projects_RM_easy_relay_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","classes","classNames","C_Users_dell_Desktop_Projects_RM_easy_relay_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","assign","defaultProps","bem","bn","create","Page","title","breadcrumbs","children","C_Users_dell_Desktop_Projects_RM_easy_relay_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","b","react__WEBPACK_IMPORTED_MODULE_1___default","e","_Typography__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","length","map","_ref2","index","name","active","key","__webpack_require__","d","__webpack_exports__","getColor","getThemeColors","availableColor","arguments","undefined","window","getComputedStyle","document","documentElement","getPropertyValue","concat","getStackLineChart","stackLineChartOptions","chart_js__WEBPACK_IMPORTED_MODULE_0__","chart_js__WEBPACK_IMPORTED_MODULE_0___default","n","utils_colors__WEBPACK_IMPORTED_MODULE_1__","labels","data","canvas","gradient","getContext","createLinearGradient","addColorStop","ChartJS","helpers","color","alpha","rgbString","datasets","label","borderColor","backgroundColor","fill","tooltips","intersect","animation","duration","scales","xAxes","display","yAxes","legend","NumberWidget","subtitle","number","_ref$progress","progress","value","objectWithoutProperties","react_default","Card","body","CardText","CardTitle","Progress","style","height","DataWidget","_ref$data","data1","value1","label1","_ref$data2","data2","value2","label2","_ref$data3","data3","value3","label3","IconWidget","bgColor","Icon","icon","iconProps","defineProperty","inverse","CardBody","size","CardSubtitle","Widget_NumberWidget","Widget_DataWidget","Widget_IconWidget","HorizontalAvatarList","avatars","avatarProps","reversed","leng","count","react__WEBPACK_IMPORTED_MODULE_2___default","i","avatar","isFirstItem","react__WEBPACK_IMPORTED_MODULE_2__","components_Avatar__WEBPACK_IMPORTED_MODULE_1__","id","src","zIndex","border","marginLeft","marginBottom","marginTop","reactstrap__WEBPACK_IMPORTED_MODULE_3__","delay","show","hide","target","cityScale","scaleLinear","domain","range","BubbleMap","state","cities","secondaryColor","lightColor","react__WEBPACK_IMPORTED_MODULE_8___default","react_simple_maps__WEBPACK_IMPORTED_MODULE_9__","projectionConfig","scale","width","center","disablePanning","geography","world50m","geographies","projection","default","stroke","strokeWidth","outline","hover","pressed","this","city","marker","cx","cy","r","population","Component","ProductMedia","image","description","right","left","object","heading","components_Typography__WEBPACK_IMPORTED_MODULE_4__","statusMap","open","closed","pending","SupportTicket","date","text","status","onClick","_Avatar__WEBPACK_IMPORTED_MODULE_5__","defualtProps","AvatarWithBadge","withBadge","position","Avatar","UserProgressTable","headers","usersData","responsive","item"],"mappings":"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","file":"static/js/3.0841e3a2.chunk.js","sourcesContent":["import classNames from 'classnames';\r\nimport React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nconst tagMap = {\r\n  h1: 'h1',\r\n  h2: 'h2',\r\n  h3: 'h3',\r\n  h4: 'h4',\r\n  h5: 'h5',\r\n  h6: 'h6',\r\n  'display-1': 'h1',\r\n  'display-2': 'h1',\r\n  'display-3': 'h1',\r\n  'display-4': 'h1',\r\n  p: 'p',\r\n  lead: 'p',\r\n  blockquote: 'blockquote',\r\n};\r\n\r\nconst types = Object.keys(tagMap);\r\n\r\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\r\n  const classes = classNames({ [type]: !!type }, className);\r\n  let TypoComp;\r\n\r\n  if (Tag) {\r\n    TypoComp = Tag;\r\n  } else if (!Tag && tagMap[type]) {\r\n    TypoComp = tagMap[type];\r\n  } else {\r\n    TypoComp = 'p';\r\n  }\r\n\r\n  return <TypoComp {...restProps} className={classes} />;\r\n};\r\n\r\nTypography.propTypes = {\r\n  tag: PropTypes.component,\r\n  className: PropTypes.string,\r\n  type: PropTypes.oneOf(types),\r\n};\r\n\r\nTypography.defaultProps = {\r\n  type: 'p',\r\n};\r\n\r\nexport default Typography;\r\n","import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport bn from 'utils/bemnames';\r\n\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\n\r\nimport Typography from './Typography';\r\n\r\nconst bem = bn.create('page');\r\n\r\nconst Page = ({\r\n  title,\r\n  breadcrumbs,\r\n  tag: Tag,\r\n  className,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const classes = bem.b('px-3', className);\r\n\r\n  return (\r\n    <Tag className={classes} {...restProps}>\r\n      <div className={bem.e('header')}>\r\n        {title && typeof title === 'string' ? (\r\n          <Typography type=\"h1\" className={bem.e('title')}>\r\n            {title}\r\n          </Typography>\r\n        ) : (\r\n            title\r\n          )}\r\n        {breadcrumbs && (\r\n          <Breadcrumb className={bem.e('breadcrumb')}>\r\n            <BreadcrumbItem>Home</BreadcrumbItem>\r\n            {breadcrumbs.length &&\r\n              breadcrumbs.map(({ name, active }, index) => (\r\n                <BreadcrumbItem key={index} active={active}>\r\n                  {name}\r\n                </BreadcrumbItem>\r\n              ))}\r\n          </Breadcrumb>\r\n        )}\r\n      </div>\r\n      {children}\r\n    </Tag>\r\n  );\r\n};\r\n\r\nPage.propTypes = {\r\n  tag: PropTypes.component,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  className: PropTypes.string,\r\n  children: PropTypes.node,\r\n  breadcrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      active: PropTypes.bool,\r\n    })\r\n  ),\r\n};\r\n\r\nPage.defaultProps = {\r\n  tag: 'div',\r\n  title: '',\r\n};\r\n\r\nexport default Page;\r\n","// const availableColors = [\r\n//   'blue',\r\n//   'indigo',\r\n//   'purple',\r\n//   'pink',\r\n//   'red',\r\n//   'orange',\r\n//   'yellow',\r\n//   'green',\r\n//   'teal',\r\n//   'cyan',\r\n//   'white',\r\n//   'gray',\r\n//   'gray-dark',\r\n//   'primary',\r\n//   'secondary',\r\n//   'success',\r\n//   'info',\r\n//   'warning',\r\n//   'danger',\r\n//   'light',\r\n//   'dark',\r\n// ];\r\n\r\nexport const getColor = (availableColor = 'primary') => {\r\n  if (typeof window === 'undefined') {\r\n    return null;\r\n  }\r\n\r\n  const color = window\r\n    .getComputedStyle(document.documentElement)\r\n    .getPropertyValue(`--${availableColor}`);\r\n\r\n  return color;\r\n};\r\n\r\nexport const getThemeColors = () => [\r\n  'primary',\r\n  'secondary',\r\n  'success',\r\n  'info',\r\n  'warning',\r\n  'danger',\r\n];\r\n","import ChartJS from 'chart.js';\r\nimport { getColor } from 'utils/colors';\r\n\r\nexport const getStackLineChart = ({ labels, data }) => canvas => {\r\n  const ctx = canvas.getContext('2d');\r\n  let gradient = ctx.createLinearGradient(0, 0, 0, 240);\r\n  gradient.addColorStop(\r\n    0,\r\n    ChartJS.helpers\r\n      .color('#00c9ff')\r\n      .alpha(1)\r\n      .rgbString()\r\n  );\r\n  gradient.addColorStop(\r\n    1,\r\n    ChartJS.helpers\r\n      .color('#00c9ff')\r\n      .alpha(0.2)\r\n      .rgbString()\r\n  );\r\n\r\n  return {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        data,\r\n        label: 'My First dataset',\r\n        borderColor: getColor('primary'),\r\n        backgroundColor: gradient,\r\n        fill: 'origin',\r\n      },\r\n    ],\r\n  };\r\n};\r\n\r\nexport const stackLineChartOptions = {\r\n  tooltips: {\r\n    intersect: false,\r\n  },\r\n  animation: {\r\n    duration: 0,\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        display: false,\r\n      },\r\n    ],\r\n    yAxes: [{ display: false }],\r\n  },\r\n  legend: {\r\n    display: false,\r\n  },\r\n  // elements: {\r\n  //   line: {\r\n  //     tension: 0, // disables bezier curves\r\n  //   },\r\n  // },\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport { Card, CardText, CardTitle, Progress } from 'reactstrap';\r\nimport Typography from '../Typography';\r\n\r\nconst NumberWidget = ({\r\n  title,\r\n  subtitle,\r\n  number,\r\n  color,\r\n  progress: { value, label },\r\n  ...restProps\r\n}) => {\r\n  return (\r\n    <Card body {...restProps}>\r\n      <div className=\"d-flex justify-content-between\">\r\n        <CardText tag=\"div\">\r\n          <Typography className=\"mb-0\">\r\n            <strong>{title}</strong>\r\n          </Typography>\r\n          <Typography className=\"mb-0 text-muted small\">{subtitle}</Typography>\r\n        </CardText>\r\n        <CardTitle className={`text-${color}`}>{number}</CardTitle>\r\n      </div>\r\n      <Progress value={value} color={color} style={{ height: '8px' }} />\r\n      <CardText tag=\"div\" className=\"d-flex justify-content-between\">\r\n        <Typography tag=\"span\" className=\"text-left text-muted small\">\r\n          {label}\r\n        </Typography>\r\n        <Typography tag=\"span\" className=\"text-right text-muted small\">\r\n          {value}%\r\n        </Typography>\r\n      </CardText>\r\n    </Card>\r\n  );\r\n};\r\n\r\nNumberWidget.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  subtitle: PropTypes.string,\r\n  number: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired,\r\n  ]),\r\n  color: PropTypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'info',\r\n    'warning',\r\n    'danger',\r\n    'light',\r\n    'dark',\r\n  ]),\r\n  progress: PropTypes.shape({\r\n    value: PropTypes.number,\r\n    label: PropTypes.string,\r\n  }),\r\n};\r\n\r\nNumberWidget.defaultProps = {\r\n  title: '',\r\n  subtitle: '',\r\n  number: 0,\r\n  color: 'primary',\r\n  progress: {\r\n    value: 0,\r\n    label: '',\r\n  },\r\n};\r\n\r\nexport default NumberWidget;\r\n","import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport { Card, CardText, CardTitle, Progress } from 'reactstrap';\r\nimport Typography from '../Typography';\r\n\r\nconst DataWidget = ({\r\n  title,\r\n  data1: { value1, label1 },\r\n  data2:{ value2, label2 },\r\n  data3:{ value3, label3 },\r\n  ...restProps\r\n}) => {\r\n  return (\r\n    <Card body {...restProps}>\r\n      <div className=\"d-flex justify-content-between\">\r\n        <CardText tag=\"div\">\r\n          <Typography className=\"mb-0\">\r\n            <strong>{title}</strong>\r\n          </Typography>\r\n        </CardText>\r\n      </div>\r\n      <CardText tag=\"div\" className=\"d-flex justify-content-between\">\r\n        <Typography tag=\"span\" className=\"text-left \">\r\n          {label1}\r\n        </Typography>\r\n        <Typography tag=\"span\" className=\"text-right  \">\r\n          {value1}\r\n        </Typography>\r\n      </CardText>\r\n      <CardText tag=\"div\" className=\"d-flex justify-content-between\">\r\n        <Typography tag=\"span\" className=\"text-left \">\r\n          {label2}\r\n        </Typography>\r\n        <Typography tag=\"span\" className=\"text-right  \">\r\n          {value2}\r\n        </Typography>\r\n      </CardText>\r\n      <CardText tag=\"div\" className=\"d-flex justify-content-between\">\r\n        <Typography tag=\"span\" className=\"text-left \">\r\n          {label3}\r\n        </Typography>\r\n        <Typography tag=\"span\" className=\"text-right  \">\r\n          {value3}\r\n        </Typography>\r\n      </CardText>\r\n    </Card>\r\n  );\r\n};\r\n\r\nDataWidget.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  data1: PropTypes.shape({\r\n    value: PropTypes.number,\r\n    label: PropTypes.string,\r\n  }),\r\n  data2: PropTypes.shape({\r\n    value: PropTypes.number,\r\n    label: PropTypes.string,\r\n  }),\r\n  data3: PropTypes.shape({\r\n    value: PropTypes.number,\r\n    label: PropTypes.string,\r\n  }),\r\n};\r\n\r\nDataWidget.defaultProps = {\r\n  title: '',\r\n  data1: {\r\n    value1: 0,\r\n    label1: '',\r\n  },\r\n  data2: {\r\n    value2: 0,\r\n    label2: '',\r\n  },\r\n  data3: {\r\n    value3: 0,\r\n    label3: '',\r\n  },\r\n};\r\n\r\nexport default DataWidget;\r\n","import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport classNames from 'classnames';\r\n\r\nimport { Card, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\n\r\nconst IconWidget = ({\r\n  bgColor,\r\n  icon: Icon,\r\n  iconProps,\r\n  title,\r\n  subtitle,\r\n  className,\r\n  ...restProps\r\n}) => {\r\n  const classes = classNames('cr-widget', className, {\r\n    [`bg-${bgColor}`]: bgColor,\r\n  });\r\n  return (\r\n    <Card inverse className={classes} {...restProps}>\r\n      <CardBody className=\"cr-widget__icon\">\r\n        <Icon size={50} {...iconProps} />\r\n      </CardBody>\r\n      <CardBody>\r\n        <CardTitle>{title}</CardTitle>\r\n        <CardSubtitle>{subtitle}</CardSubtitle>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nIconWidget.propTypes = {\r\n  bgColor: PropTypes.string,\r\n  icon: PropTypes.component,\r\n  iconProps: PropTypes.object,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.string,\r\n};\r\n\r\nIconWidget.defaultProps = {\r\n  bgColor: 'primary',\r\n  icon: 'span',\r\n  iconProps: { size: 50 },\r\n};\r\n\r\nexport default IconWidget;\r\n","export { default as NumberWidget } from './NumberWidget';\r\nexport { default as DataWidget } from './DataWidget';\r\nexport { default as IconWidget } from './IconWidget';\r\n","import Avatar from 'components/Avatar';\r\nimport React, { Fragment } from 'react';\r\nimport { UncontrolledTooltip } from 'reactstrap';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nconst HorizontalAvatarList = ({\r\n  tag: Tag,\r\n  avatars,\r\n  avatarProps,\r\n  reversed,\r\n  ...restProps\r\n}) => {\r\n  let leng = reversed ? avatars.length + 1 : 1;\r\n  const count = reversed ? () => leng-- : () => leng++;\r\n\r\n  return (\r\n    <Tag className=\"d-flex align-items-center\" {...restProps}>\r\n      {avatars &&\r\n        avatars.map(({ avatar, name }, i) => {\r\n          const index = count();\r\n          const isFirstItem = i === 0;\r\n\r\n          return (\r\n            <Fragment key={index}>\r\n              <Avatar\r\n                {...avatarProps}\r\n                id={`HorizontalAvatarList-avatar-${index}`}\r\n                src={avatar}\r\n                style={{\r\n                  zIndex: index,\r\n                  border: '3px solid #fff',\r\n                  marginLeft: !isFirstItem && -20,\r\n                  marginBottom: '20px',\r\n                  marginTop:'20px'\r\n                }}\r\n              />\r\n\r\n              {!!name && (\r\n                <UncontrolledTooltip\r\n                  delay={{ show: 0, hide: 0 }}\r\n                  target={`HorizontalAvatarList-avatar-${index}`}>\r\n                  {name}\r\n                </UncontrolledTooltip>\r\n              )}\r\n            </Fragment>\r\n          );\r\n        })}\r\n    </Tag>\r\n  );\r\n};\r\n\r\nHorizontalAvatarList.propTypes = {\r\n  tag: PropTypes.node,\r\n  avatars: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string,\r\n    })\r\n  ).isRequired,\r\n  avatarProps: PropTypes.object,\r\n  reversed: PropTypes.bool,\r\n};\r\n\r\nHorizontalAvatarList.defaultProps = {\r\n  tag: 'div',\r\n  avatars: [],\r\n  avatarProps: {},\r\n  reversed: false,\r\n};\r\n\r\nexport default HorizontalAvatarList;\r\n","import world50m from 'assets/geo-data/world-50m.json';\r\nimport cities from 'assets/geo-data/world-most-populous-cities.json';\r\nimport { scaleLinear } from 'd3-scale';\r\nimport React, { Component } from 'react';\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Marker,\r\n  Markers,\r\n  ZoomableGroup,\r\n} from 'react-simple-maps';\r\nimport { getColor } from 'utils/colors';\r\n\r\nconst cityScale = scaleLinear()\r\n  .domain([0, 37843000])\r\n  .range([1, 25]);\r\n\r\nclass BubbleMap extends Component {\r\n  state = {\r\n    cities,\r\n  };\r\n\r\n  render() {\r\n    // const primaryColor = getColor('primary');\r\n    const secondaryColor = getColor('secondary');\r\n    const lightColor = getColor('light');\r\n\r\n    return (\r\n      <ComposableMap\r\n        projectionConfig={{ scale: 205 }}\r\n        width={980}\r\n        height={551}\r\n        style={{\r\n          width: '100%',\r\n          height: 'auto',\r\n        }}\r\n      >\r\n        <ZoomableGroup center={[0, 20]} disablePanning>\r\n          <Geographies geography={world50m}>\r\n            {(geographies, projection) =>\r\n              geographies.map(\r\n                (geography, i) =>\r\n                  geography.id !== 'ATA' && (\r\n                    <Geography\r\n                      key={i}\r\n                      geography={geography}\r\n                      projection={projection}\r\n                      style={{\r\n                        default: {\r\n                          fill: lightColor,\r\n                          stroke: lightColor,\r\n                          strokeWidth: 0.75,\r\n                          outline: 'none',\r\n                        },\r\n                        hover: {\r\n                          fill: secondaryColor,\r\n                          stroke: secondaryColor,\r\n                          strokeWidth: 0.75,\r\n                          outline: 'none',\r\n                        },\r\n                        pressed: {\r\n                          fill: secondaryColor,\r\n                          stroke: secondaryColor,\r\n                          strokeWidth: 0.75,\r\n                          outline: 'none',\r\n                        },\r\n                      }}\r\n                    />\r\n                  ),\r\n              )\r\n            }\r\n          </Geographies>\r\n          <Markers>\r\n            {this.state.cities.map((city, i) => (\r\n              <Marker key={i} marker={city}>\r\n                <circle\r\n                  cx={0}\r\n                  cy={0}\r\n                  r={cityScale(city.population)}\r\n                  fill={secondaryColor}\r\n                  stroke={secondaryColor}\r\n                  strokeWidth=\"2\"\r\n                />\r\n              </Marker>\r\n            ))}\r\n          </Markers>\r\n        </ZoomableGroup>\r\n      </ComposableMap>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BubbleMap;\r\n","import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport { Media } from 'reactstrap';\r\n\r\nimport Typography from 'components/Typography';\r\n\r\nconst ProductMedia = ({ image, title, description, right, ...restProps }) => {\r\n  return (\r\n    <Media {...restProps}>\r\n      <Media left>\r\n        <Media\r\n          object\r\n          src={image}\r\n          className=\"rounded mr-2 mb-2\"\r\n          style={{ width: 100, height: 'auto' }}\r\n        />\r\n      </Media>\r\n      <Media body className=\"overflow-hidden\">\r\n        <Media heading tag=\"h5\" className=\"text-truncate\">\r\n          {title}\r\n        </Media>\r\n        <p className=\"text-muted text-truncate\">{description}</p>\r\n      </Media>\r\n      <Media right className=\"align-self-center\">\r\n        {right && typeof right === 'string' ? (\r\n          <Typography type=\"h4\">{right}</Typography>\r\n        ) : (\r\n          right\r\n        )}\r\n      </Media>\r\n    </Media>\r\n  );\r\n};\r\n\r\nProductMedia.propTypes = {\r\n  image: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  right: PropTypes.node,\r\n};\r\n\r\nexport default ProductMedia;\r\n","import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport { Media, Button } from 'reactstrap';\r\n\r\nimport Avatar from './Avatar';\r\n\r\nconst statusMap = {\r\n  open: 'info',\r\n  closed: 'muted',\r\n  pending: 'success',\r\n};\r\n\r\nconst SupportTicket = ({\r\n  avatar,\r\n  name,\r\n  date,\r\n  text,\r\n  status,\r\n  onClick,\r\n  ...restProps\r\n}) => {\r\n  return (\r\n    <div {...restProps}>\r\n      <Media className=\"m-2\">\r\n        <Media left className=\"mr-2\">\r\n          <Avatar src={avatar} />\r\n        </Media>\r\n        <Media body>\r\n          <Media heading tag=\"h6\" className=\"m-0\">\r\n            {name}\r\n          </Media>\r\n          <p className=\"text-muted m-0\">\r\n            <small>{date}</small>\r\n          </p>\r\n        </Media>\r\n        <Media right className=\"align-self-center\">\r\n          <Button\r\n            color=\"link\"\r\n            className={`text-capitalize text-${statusMap[status]}`}\r\n          >\r\n            {status}\r\n          </Button>\r\n        </Media>\r\n      </Media>\r\n      <Media>\r\n        <p className=\"text-muted\">{text}</p>\r\n      </Media>\r\n    </div>\r\n  );\r\n};\r\n\r\nSupportTicket.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string,\r\n  date: PropTypes.date,\r\n  text: PropTypes.string,\r\n  status: PropTypes.oneOf(['open', 'closed', 'pending']),\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nSupportTicket.defualtProps = {\r\n  avatar: '',\r\n  name: '',\r\n  date: '',\r\n  text: '',\r\n  status: 'pending',\r\n  onClick: () => {},\r\n};\r\n\r\nexport default SupportTicket;\r\n","import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport { Table, Progress } from 'reactstrap';\r\n\r\nimport Avatar from 'components/Avatar';\r\n\r\nimport withBadge from 'hocs/withBadge';\r\n\r\nconst AvatarWithBadge = withBadge({\r\n  position: 'bottom-right',\r\n  color: 'success',\r\n})(Avatar);\r\n\r\nconst UserProgressTable = ({ headers, usersData, ...restProps }) => {\r\n  return (\r\n    <Table responsive hover {...restProps}>\r\n      <thead>\r\n        <tr className=\"text-capitalize align-middle text-center\">\r\n          {headers.map((item, index) => <th key={index}>{item}</th>)}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {usersData.map(({ avatar, name, date, progress }, index) => (\r\n          <tr key={index}>\r\n            <td className=\"align-middle text-center\">\r\n              <AvatarWithBadge src={avatar} />\r\n            </td>\r\n            <td className=\"align-middle text-center\">{name}</td>\r\n            <td className=\"align-middle text-center\">{date}</td>\r\n            <td className=\"align-middle text-center\">\r\n              <Progress value={progress} style={{ height: 5 }} />\r\n            </td>\r\n            <td className=\"align-middle text-center\">{progress}%</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nUserProgressTable.propTypes = {\r\n  headers: PropTypes.node,\r\n  usersData: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      avatar: PropTypes.string,\r\n      name: PropTypes.string,\r\n      date: PropTypes.date,\r\n    })\r\n  ),\r\n};\r\n\r\nUserProgressTable.defaultProps = {\r\n  headers: [],\r\n  usersData: [],\r\n};\r\n\r\nexport default UserProgressTable;\r\n"],"sourceRoot":""}